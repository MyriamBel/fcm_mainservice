# Generated by Django 3.2 on 2022-03-14 17:12

import base.services
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('phone', models.CharField(blank=True, max_length=30, verbose_name='phone number')),
                ('isActive', models.BooleanField(default=True, verbose_name='is active')),
                ('dateJoined', models.DateTimeField(auto_now_add=True, verbose_name='joining date')),
                ('datetimeDeletion', models.DateTimeField(blank=True, null=True, verbose_name='removal time')),
                ('lastLogin', models.DateTimeField(auto_now=True, verbose_name='last entrance')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='UserAdditionalEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_emails', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'email',
                'verbose_name_plural': 'emails',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, verbose_name='name')),
                ('surname', models.CharField(blank=True, max_length=50, verbose_name='surname')),
                ('patronymic', models.CharField(blank=True, max_length=50, verbose_name='patronymic')),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='age')),
                ('sex', models.CharField(choices=[('m', 'male'), ('f', 'female')], default='m', max_length=1)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=base.services.get_image_upload, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'png', 'jpeg']), base.services.validate_photo_size], verbose_name='photo')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'profile',
                'verbose_name_plural': 'profiles',
            },
        ),
    ]
